func recurse(a) {
    if (a <= 0) {
        return 0;
    }
    return 1 + recurse(a - 1);
}

func start_recurse() {
    recurse(100000);
}

func fibonacci_slow(i) {
    if (i <= 1) {
        return i;
    }
    return fibonacci_slow(i - 1) + fibonacci_slow(i - 2);
}

func start_fibonacci_slow() {
    fibonacci_slow(40);
}

func fibonacci_fast(i) {
    if (i <= 1) {
        return i;
    }

    var a = 0;
    var b = 1;
    i = i - 2;
    while (i >= 0) {
        var c = a + b;
        a = b;
        b = c;
        i = i - 1;
    }
    return b;
}

func start_fibonacci_fast() {
    fibonacci_fast(80);
}
