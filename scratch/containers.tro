import std;

func test_map(x, y, z) {
    return Map{
        "a": x(),
        "b": y,
        z: 3,
    };
}

func test_set(x, y, z) {
    return Set{
        x(), y, z[3]
    };
}

func test_array(x, y, z) {
    [ x(), y, z[3] ];
}

func map_usage() {
    const m = Map{
        "key": "value",
    };
    m[1] = 2;
    m[null] = "foo";

    std.print(m["key"]);
    std.print(m[1]);
    std.print(m[null]);

    m[null] = 3;

    std.print("");
    std.print(m.remove("key"));
    std.print("");
    
    std.print(m["key"]);
    std.print(m[1]);
    std.print(m[null]);

    std.print("");
    m.set(null, 123);
    std.print(m.contains(null));
    std.print(m.contains("key"));
    m.remove(null);
    std.print(m.contains(null));
}

func map_assignment() {
    const m = Map{};

    m[-1] = 4;
    m[1] = m[2] = m["foo"] = m[-1];
    std.print(m[1], m[2], m["foo"], m["bar"]);
}

func array_usage() {
    const a = [
        1, 2, 3
    ];
    std.print(a[0], a[1], a[2]);
    
    a[1] = "value";
    std.print(a[0], a[1], a[2]);
}

func tuple_usage() {
    const t = (
        1, 2, 3
    );
    std.print(t);
    std.print(t[0], t[1], t[2]);
    
    t[1] = -1;
    std.print(t[0], t[1], t[2]);
}
