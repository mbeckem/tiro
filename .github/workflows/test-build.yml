name: Test Build

on: [push]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            cc: "gcc-8"
            cxx: "g++-8"

    runs-on: ${{ matrix.os }}

    env:
      BUILD_TYPE: Debug
      CMAKE_GENERATOR: Ninja
      CC: "${{ matrix.cc }}"
      CXX: "${{ matrix.cxx }}"

    steps:
      - uses: actions/checkout@v2

      - name: Install build dependencies
        shell: bash
        run: sudo apt-get update && sudo apt-get install -y build-essential ninja-build cmake ccache ${{ matrix.cc }} ${{ matrix.cxx }}
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Create Build Environment
        shell: bash
        run: |
          mkdir -p ${{runner.workspace}}/build
          mkdir -p ${{runner.workspace}}/ccache
          echo "CCACHE_DIR=${{runner.workspace}}/ccache" >> $GITHUB_ENV

      - name: Prepare timestamp
        id: timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")

      - name: Cache compiled output
        uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ join(matrix.*, '-') }}-${{ steps.timestamp.outputs.timestamp }}
          restore-keys: ccache-${{ join(matrix.*, '-') }}-

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{runner.workspace}}/build/_deps
          key: deps-${{ join(matrix.*, '-') }}-${{ hashFiles('Dependencies.cmake') }}

      - name: Setup ccache
        shell: bash
        run: ccache --max-size=2G

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -G $CMAKE_GENERATOR -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DTIRO_TESTS=1 -DTIRO_WARNINGS=1 -DTIRO_WERROR=1

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          cmake --build . --config $BUILD_TYPE -j $(nproc)
          ccache --show-stats

      - name: Unit tests
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ./bin/unit_tests

      - name: API tests
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ./bin/api_tests
