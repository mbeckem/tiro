name: Test Build

on: [push]

env:
  BUILD_TYPE: Debug
  CMAKE_GENERATOR: Ninja
  CC: gcc-8
  CXX: g++-8

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install build dependencies
        shell: bash
        run: sudo apt-get update && sudo apt-get install -y build-essential g++-8 ninja-build cmake ccache

      - name: Create Build Environment
        shell: bash
        run: |
          mkdir -p ${{runner.workspace}}/build
          mkdir -p ${{runner.workspace}}/ccache
          echo "CCACHE_DIR=${{runner.workspace}}/ccache" >> $GITHUB_ENV

      - name: Cache compiled output
        uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-0

      - name: Setup ccache
        shell: bash
        run: ccache --max-size=2G

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -G $CMAKE_GENERATOR -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DTIRO_TESTS=1 -DTIRO_WARNINGS=1 -DTIRO_WERROR=1

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          cmake --build . --config $BUILD_TYPE -j $(nproc)
          ccache --show-stats

      - name: Unit tests
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ./bin/unit_tests

      - name: API tests
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ./bin/api_tests
